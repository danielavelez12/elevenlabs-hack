(function(s,o){typeof exports=="object"&&typeof module<"u"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(s=typeof globalThis<"u"?globalThis:s||self,o(s.BrowserAudioInput={}))})(this,function(s){var o=class extends EventTarget{dispatchTypedEvent(t,e){return super.dispatchEvent(e)}},w=Object.defineProperty,D=(t,e,i)=>e in t?w(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,d=(t,e,i)=>D(t,typeof e!="symbol"?e+"":e,i);class h extends o{constructor(){super(),d(this,"_permissionState","prompt"),d(this,"_devices",[]),d(this,"updateDeviceList",async e=>{const i=navigator.userAgent.search("Firefox")>0;if(e&&i){await navigator.mediaDevices.enumerateDevices();try{const n=await navigator.mediaDevices.getUserMedia({audio:!0,video:!1});for(const u of n.getTracks())u.stop()}catch{throw new Error("Tried to create media stream but it didn't work")}}const r=(await navigator.mediaDevices.enumerateDevices()).filter(n=>n.kind==="audioinput"&&n.deviceId!=="");this.devices=r}),!(typeof window>"u")&&(this.updateDeviceList(),navigator.mediaDevices.addEventListener("devicechange",()=>{this.updateDeviceList()}),navigator.permissions.query({name:"microphone"}).then(e=>{this.permissionState=e.state,e.addEventListener("change",()=>{this.permissionState=e.state})}).catch(e=>{console.warn("browser does not support microphone permissions query")}),this.addEventListener("changePermissions",()=>{this.permissionState==="granted"&&this.updateDeviceList(!0)}))}get permissionState(){return this._permissionState}set permissionState(e){this._permissionState=e,this.dispatchTypedEvent("changePermissions",new Event("changePermissions"))}get devices(){return this._devices}set devices(e){e!==this._devices&&(this._devices=e,this.dispatchTypedEvent("changeDevices",new Event("changeDevices")))}async promptPermissions(){if(this.permissionState==="prompt"){this.permissionState="prompting";try{await navigator.mediaDevices.getUserMedia({audio:!0,video:!1})&&(this.permissionState="granted")}catch{this.permissionState="denied"}}}}let c=null;function T(){return c??(c=new h),c}var b=Object.defineProperty,x=(t,e,i)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,a=(t,e,i)=>x(t,typeof e!="symbol"?e+"":e,i);const p="recordingStarted",v="recordingStopped",m="audio",l="mute",g="unmute";class S extends Event{constructor(e){super(m),this.data=e}}class f extends Event{constructor(){super(l)}}class y extends Event{constructor(){super(g)}}class A extends o{constructor(e){super(),this.workletScriptURL=e,a(this,"mediaStream"),a(this,"audioContext"),a(this,"inputSourceNode"),a(this,"_analyser")}get analyser(){return this._analyser}get isRecording(){return this.mediaStream?.active??!1}async startRecording(e){this.audioContext=e.audioContext;try{await this.audioContext.audioWorklet.addModule(this.workletScriptURL)}catch(n){throw new E(this.workletScriptURL,n)}const i={echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0,...e.recordingOptions??{}};this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:{deviceId:e.deviceId,...i}}),this.inputSourceNode=this.audioContext.createMediaStreamSource(this.mediaStream);const r=new AudioWorkletNode(this.audioContext,"pcm-audio-processor");r.port.onmessage=n=>{const u=n.data;this.dispatchTypedEvent(m,new S(u))},this.inputSourceNode.connect(r),r.connect(this.audioContext.destination),this._analyser=this.audioContext.createAnalyser(),this.inputSourceNode.connect(this._analyser),this.dispatchTypedEvent(p,new Event(p))}mute(){if(this.mediaStream){for(const e of this.mediaStream.getTracks())console.log(e),e.enabled=!1;this.dispatchTypedEvent(l,new f)}}unmute(){if(this.mediaStream){for(const e of this.mediaStream.getTracks())e.enabled=!0;this.dispatchTypedEvent(g,new y)}}get isMuted(){return this.mediaStream?.getAudioTracks().some(e=>!e.enabled)??!1}stopRecording(){if(this.mediaStream){for(const e of this.mediaStream.getTracks())e.stop();this.inputSourceNode?.disconnect(),this.mediaStream=void 0,this.inputSourceNode=void 0,this._analyser=void 0,this.audioContext=void 0,this.dispatchTypedEvent(v,new Event(v))}}}class E extends Error{constructor(e,i){super(`Failed to register module from ${e}`,{cause:i}),this.name="AudioModuleRegistrationError"}}s.AudioInputDevicesStore=h,s.AudioModuleRegistrationError=E,s.InputAudioEvent=S,s.MuteEvent=f,s.PCMRecorder=A,s.UnmuteEvent=y,s.getAudioDevicesStore=T});
